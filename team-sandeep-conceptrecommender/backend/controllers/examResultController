//author: Sai Lokesh, Mondi
import { Request, Response } from 'express';
import { ExamResult } from '../models/ExamResult';
import { Topic } from '../models/Topic';

interface AuthRequest extends Request {
  user?: any;
}

export const submitExamResult = async (req: AuthRequest, res: Response) => {
  try {
    const { topicId, score, totalQuestions, correctAnswers, timeTaken } = req.body;

    const examResult = new ExamResult({
      userId: req.user._id,
      topicId,
      score,
      totalQuestions,
      correctAnswers,
      timeTaken,
    });

    await examResult.save();

    // Update topic status based on exam score
    const topic = await Topic.findById(topicId);
    if (topic) {
      if (score >= 90) {
        topic.status = 'mastered';
      } else if (score >= 70) {
        topic.status = 'completed';
      }
      await topic.save();
    }

    res.status(201).json(examResult);
  } catch (error) {
    res.status(400).json({ error: 'Failed to submit exam result' });
  }
};

export const getUserExamResults = async (req: AuthRequest, res: Response) => {
  try {
    const examResults = await ExamResult.find({ userId: req.user._id })
      .populate('topicId', 'name category')
      .sort({ completedAt: -1 });

    res.json(examResults);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch exam results' });
  }
};

export const getTopicExamResults = async (req: Request, res: Response) => {
  try {
    const examResults = await ExamResult.find({ topicId: req.params.topicId })
      .populate('userId', 'name email')
      .sort({ completedAt: -1 });

    res.json(examResults);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch topic exam results' });
  }
};

export const getExamResultById = async (req: Request, res: Response) => {
  try {
    const examResult = await ExamResult.findById(req.params.id)
      .populate('userId', 'name email')
      .populate('topicId', 'name category');

    if (!examResult) {
      return res.status(404).json({ error: 'Exam result not found' });
    }

    res.json(examResult);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch exam result' });
  }
}; 
